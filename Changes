Revision history for Pairfq

Version	Date	Location
0.18.0	08/13/2024	RTP, NC USA

- Allow pairing without having pair info in the name for the 'makepairs' command. This
  removes the need for creating extra files or having pair info of a certain format.
- Expand FASTQ header formats for working with SRA data that may contain pair info at
  the end of the comment.

0.17.0	03/07/2017	Vancouver, BC

- Bug fix for handling opened processes. When the input is a named pipes or piped processes 
  through process substitution, these processes are now opened correctly.
- Bug fix for handling options to main program. The help/man/version options were not being
  processed in the right order and were being treated as subcommands. Added an explicit
  test for this behaviour and version information is now logged to the console during testing.

0.16.1	12/09/2016	Vancouver, BC

- Modify how options are processed in main application. Remove manual setting of 
  keys in option hash.

0.16.0	07/24/2016	Vancouver, BC

- Clean up Unix paths correctly (e.g. '/some/relative/../path' becomes '/some/path'). 
  Fixes #10 on github.

0.15.0	12/22/2015	Vancouver, BC

- Major change in how compressing output is performed. Now, the data is piped directly
  to the compression program so it is much more efficient that writing twice and deleting
  the original data.
- The minor improvements with the new compression mechanism is that the file extension is
  handled correctly, and there are fewer Perl dependencies since the compression is done
  externally.

0.14.7	11/18/2015	Vancouver, BC

- Fix bug in compression method (syntax error with imported method).

0.14.6  10/03/2015      Vancouver, BC

- Use dispatch tables in main application for looking up methods and usage.
  This makes adding methods easier and reduces the problem of checking input
  for every command.

0.14.5	08/08/2015	Vancouver, BC

- Allow build system to find Perl instead of using environment
  variables which may not work on all systems.

0.14.4	06/10/2015	Vancouver, BC

- Add option to write to STDOUT for 'addinfo' and 'joinpairs'
  commands.
- Allow to read from stdin with a '-' or case-insensitive 'stdin'
  term (this unintentionally only worked with uppercase STDIN before).

0.14.3	05/11/2015	Vancouver, BC

- Add conditional to check if comment is missing after pair
  id with Illumina 1.8+ identifiers.

0.14.2	04/18/2015	Vancouver, BC

- Fix logging script name when reading from stdin.

0.14.1	11/18/2014	Vancouver, BC

- Remove dependencies used only for testing (List::MoreUtils
  and IPC::System::Simple) in favor of core modules/methods.

0.14	10/27/2014	Vancouver, BC

- Replace BerkeleyDB indexing method with SQLite. This
  makes installation much easier and doesn't require sudo to 
  install C libraries. This method also scales much better with
  large data sets (e.g., speed up of about 50X for more than 
  10 million reads).

0.13.2	10/13/2014	Vancouver, BC

- Fix bug in 'pairfq_lite.pl' script. For some reason,
  a temp file was being created for storage but it wasn't
  being used. This was likely from a previous indexing method.
  This did not affect any of the methods, it was just leaving
  behind a temp file.

0.13.1	8/15/2014	Vancouver, BC

- Add DOI to make repo citable.

0.13    8/11/2014	Vancouver, BC

- Add method for finding pairs from an interleaved file 
  to main application and standalone script.

0.12	6/3/2014	Athens, GA

- Add method to not load modules until they are required.
- Remove List::Util dependency from main application.

0.11	4/14/2014	Athens, GA

- Bug fix for reading files containing a dash.
  A patch was kindly provided by Dietmar Rieder.

0.10	3/20/2014	Athens, GA

-Add standalone script with no dependencies
 or version requirements in a separate /scripts
 directory.

- Improve doc readability by not listing path to program.

- Modify standalone script to work with v5.6 by
  removing List::Util dep that is in not core in v5.6
  (List::Util is in core in v5.8.9).

- Fix help message option listings for main application
  and standalone script.

0.09.1	3/18/2014	Athens, GA

- Add check for ExtUtils::MakeMaker version.
- Remove tying objects for dbm files since we are no
  longer filtering keys/values.

0.09	2/20/2014	Athens, GA

- Rework mk_key and mk_vec functions for storing data
  so they do not use UTF-8 characters. This results in
  a 40% decrease in execution time, and a 14% decrease
  in memory usage for the default in memory execution.

- The indexing method now uses 185X less memory. This appears
  to be due to a leak in the DB filter. The indexing method
  is also 25% faster now.

- Due to removing the utf8 pragma, the version requirement has
  now been lowered from 5.12 to 5.10.

- Make printing stats for 'makepairs' method an option.

0.08	2/10/2014	Athens, GA

- Bugfix for encoding read names with a comment line. Data
  was not being decoded and this was causing no pairs to 
  be found.

- Update README to point to wiki instead of having lengthy 
  descriptions of each method in a single file.

0.07	1/27/2014	Athens, GA

- Remove use of DB_File. Reasons: 1) I discovered it has
  only been a core module since v5.16 (I think, at least it was
  not in v5.14.2). 2) It is much, much slower than BerkeleyDB and
  less powerful in terms of features.

- This was the source of much frustration and failure trying to get
  everything to work in cases where DB_File was present, or BerkeleyDB
  was present, or neither. The best solution was simply to install 
  BerkeleyDB during the build process and forget about using DB_File
  because it is quite slow and may not be available anyway (as I'd
  assumed since I as using v5.18 -- and that's what the Perl docs describe).

0.06	1/25/2014	Athens, GA

- Added support for using BerkeleyDB if it is available, 
  but falling back to using DB_File for indexing method.

0.05	1/22/2014	Athens, GA

- Enhancements: 1) Make in-memory processing default instead of
  optional. This should be the expected behavior and is most used, 
  so is a better default. 

  2) Make --index an option instead of this being the default. 
  This makes the code much more expressive now by checking if the 
  index option is defined, instead of seeing if the memory option 
  is not defined.

  3) Add explicit exit or return from subroutines so it is clear
  to anyone wanting to contribute what the flow of execution is 
  for each method.

  4) More sig handlers for indexing method to clean up index.

0.04	11/18/2013	Athens, GA

- Bug fix for taking positional arguments (options were not
  being recognized correctly). Add option to get version, for 
  testing or general use.

0.03	11/18/2013	Athens, GA

- Bug fixes for splitting pairs, storing files in memory,
  and naming DBM files. Update/add tests.

0.02	11/11/2013	Athens, GA	

- Removed all utility scripts and rolled methods into a single
  executable. Completely redesigned pairfq to work as an application
  with numerous methods, instead of a single script for just pairing
  reads.

- Make individual methods positional arguments instead of options. Fix
  formatting of output and add time/version stamp.

0.01	11/01/2013	Athens, GA

- Initial release.	

